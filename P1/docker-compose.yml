version: '3.7'

volumes:
    prometheus_data: {}
    grafana_data: {}

networks:
  mynetwork:
     driver: bridge
  
services:

  prometheus:
    image: prom/prometheus:latest
    container_name: my-prometheus
    volumes:
      - ./Docker/PrometheusServer/Config/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./Docker/PrometheusServer/Config/alert.yml:/etc/prometheus/alert.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--storage.tsdb.retention.time=7d'
    ports:
      - 9090:9090
    networks:
      - mynetwork

    restart: always
    
  node-exporterA:
    image: prom/node-exporter
    container_name: node-exporterA
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command: 
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/host'
    ports:
      - 9100:9100
    networks:
      - mynetwork
    restart: always

  node-exporterB:
    image: prom/node-exporter
    container_name: node-exporterB
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command: 
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/host'
    ports:
      - 9110:9100
    networks:
      - mynetwork
    restart: always
  grafanaA:
    image: grafana/grafana-enterprise:8.2.0
    container_name: grafanaA
    user: "104"
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - ./Docker/Grafana/provisioning/datasource/datasource.yml:/etc/grafana/provisioning/datasource/datasource.yml 
      - ./Docker/Grafana/provisioning/dashboards/dashboard.yml:/etc/grafana/provisioning/dashboards/dashboard.yml
      - ./Docker/Grafana/provisioning/dashboards/prometheus.json:/etc/grafana/provisioning/dashboards/prometheus.json
      - grafana_data:/var/lib/grafana
    networks:
      - mynetwork
    restart: always
  grafanaB:
    image: grafana/grafana-enterprise:8.2.0
    container_name: grafanaB
    user: "104"
    depends_on:
      - prometheus
    ports:
      - 3030:3000
    volumes:
      - ./Docker/Grafana/provisioning/datasource:/etc/grafana/provisioning/datasources 
      - ./Docker/Grafana/provisioning/dashboards/dashboard.yml:/etc/grafana/provisioning/dashboards/dashboard.yml
      - ./Docker/Grafana/provisioning/dashboards/prometheus.json:/etc/grafana/provisioning/dashboards/prometheus.json
      - grafana_data:/var/lib/grafana
    networks:
      - mynetwork
    restart: always
  
  haproxy:
    image: haproxy:latest
    container_name: haproxy
    depends_on:
      - grafanaA
      - grafanaB
    ports:
      - 8000:80
      - 8404:8404
    volumes:
      - ./Docker/HAProxy:/usr/local/etc/haproxy:ro
    networks:
      - mynetwork
    restart: always 